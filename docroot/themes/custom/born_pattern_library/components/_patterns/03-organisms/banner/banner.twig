{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   - id: The paragraph ID.
 *   - bundle: The type of the paragraph, for example, "image" or "text".
 *   - authorid: The user ID of the paragraph author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraph']->getCreatedTime().
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
set classes = [
paragraph.bundle|clean_class
]
%}

{% set card_base_class = 'card' %}

<div {{ bem(card_base_class, (card_modifiers), card_blockname) }}>
	<div class="banner-container" style="background-image: url('{{ banner_background }}');">

	    {% block card_img %}
    {% if banner_logo%}
      {% include "@atoms/04-images/00-image/responsive-image.twig" with {
        "img_url": card_link_url|default(card_link_url),
        "img_src": banner_logo,
        "img_alt": card_img_alt,
        "image_link_blockname": card_base_class,
        "image_blockname": card_base_class,
        "output_image_tag": card_image_output_image_tag,
      } %}
    {% endif %}
  {% endblock %}

	  <div> {{ banner_text }} </div>

      {% include "@atoms/06-buttons/01-button.twig" with {
        "button_content": banner_cta_text,
        "button_url": banner_cta_url,
        "button_base_class": card_button_base_class|default('button'),
        "button_attributes": card_button_attributes,
        "button_modifiers": card_button_modifiers,
        "button_blockname": card_blockname|default(card_base_class),
      } %}


	</div>
<div>




